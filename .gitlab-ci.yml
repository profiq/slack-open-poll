# OpenPoll GitLab CI/CD Configuration

# Define the stages for the pipeline
stages:
  - setup
  - lint
  - test
  - build
  - security
  - deploy_production

# Define default image and cache settings
default:
  image: node:20
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - functions/node_modules/

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: '$CI_COMMIT_TAG'
    - when: never

# Install dependencies
setup:
  stage: setup
  script:
    - cd functions
    - npm ci
  artifacts:
    paths:
      - functions/node_modules/
    expire_in: 1 hour
  allow_failure: false

# Lint check
lint:
  stage: lint
  script:
    - cd functions
    - npm run lint
  dependencies:
    - setup
  allow_failure: false

# Tests check
test:
  stage: test
  script:
    - cd functions
    - npm run test:coverage
  dependencies:
    - setup
  allow_failure: false
  variables:
    SLACK_BOT_TOKEN: "test-token"
    SLACK_SIGNING_SECRET: "test-secret"
    FIRESTORE_EMULATOR_HOST: "localhost:8080"
  coverage: '/^All files\s+\|\s+[^\|]+\|\s+[^\|]+\|\s+[^\|]+\|\s+([0-9.]+)/'

# Build the project
build:
  stage: build
  script:
    - cd functions
    - npm run build
  dependencies:
    - setup
  artifacts:
    paths:
      - functions/lib/
    expire_in: 1 hour
  allow_failure: false

# Include security scanning templates
include:
  - template: Security/SAST.gitlab-ci.yml

# Configure SAST
sast:
  stage: security
  allow_failure: false

# Configure production deployment
deploy_production:
  stage: deploy_production
  before_script:
    - cd functions
    - npm run build
    - cd ..
    - npm i -g firebase-tools
    - echo -n $GOOGLE_APPLICATION_CREDENTIALS_BASE64 | base64 -d > private-key.json
    - export GOOGLE_APPLICATION_CREDENTIALS="private-key.json"
    - echo "SLACK_BOT_TOKEN=$SLACK_BOT_TOKEN_PROD" >> functions/.env
    - echo "SLACK_SIGNING_SECRET=$SLACK_SIGNING_SECRET_PROD" >> functions/.env
  script:
    - firebase deploy --only functions
  dependencies:
    - build
    - test
    - lint
    - sast
  environment:
    name: production
  variables:
    SLACK_SIGNING_SECRET: "$SLACK_SIGNING_SECRET_PROD"
    SLACK_BOT_TOKEN: "$SLACK_BOT_TOKEN_PROD"
    NODE_ENV: production
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_TAG'